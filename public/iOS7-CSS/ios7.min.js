(function() {
    "use strict";
    var a = document,
        b = a.documentElement,
        c = b.classList;
    if (navigator.userAgent.indexOf("Cydia") > 0) {
        var d = a.title,
            e = d.indexOf(" \u00b7 ");
        if (e > 0) a.title = d.substr(0, e);
        c.add("cydia")
    } else c.remove("cydia", "depiction");
    if (window.devicePixelRatio > 1) {
        var d = a.createElement("div");
        d.style.border = ".5px solid transparent";
        b.appendChild(d);
        if (d.offsetHeight) c.add("has-subpixel");
        b.removeChild(d)
    }
}());
(function(document) {
    "use strict";
    if (document.documentElement.classList.contains("cydia")) {
        var base = document.createElement("base");
        base.target = "_open";
        document.head.appendChild(base);
    }
    window.addEventListener("DOMContentLoaded", function() {
        for (var i = 0; i < document.scripts.length; i++) {
            var script = document.scripts[i];
            if (script.src.indexOf("projectwonderful.com") > 0 || script.src.indexOf("googlesyndication.com") > 0) {
                script.addEventListener("error", function() {
                    var ad = document.querySelector(".they-pay-the-bills");
                    if (ad != null) {
                        ad.style.display = "none";
                        var message = document.createElement("div");
                        message.innerHTML = document.querySelector("#tpl-please-reconsider").innerText;
                        ad.parentNode.insertBefore(message, ad);
                    }
                });
                break;
            }
        }
    });

    function parseVersionString(version) {
        var bits = version.split(".");
        return [bits[0], bits[1] ? bits[1] : 0, bits[2] ? bits[2] : 0];
    }

    function compareVersions(ours, theirs) {
        for (var i = 0; i < 4; i++) {
            var a = Number(theirs[i]),
                b = Number(ours[i]);
            if (a > b) {
                return 1;
            } else if (a < b) {
                return -1;
            }
        }
        return 0;
    }
    var prerequisite = document.querySelector(".prerequisite"),
        version = navigator.appVersion.match(/CPU (iPhone )?OS (\d+)_(\d+)(_(\d+))? like/i);
    if (!prerequisite || !version) {
        return;
    }
    var osVersion = [version[2], version[3], version[5] ? version[5] : 0],
        osString = osVersion[0] + "." + osVersion[1] + (osVersion[2] && osVersion[2] != 0 ? "." + osVersion[2] : ""),
        minString = prerequisite.dataset.minIos,
        maxString = prerequisite.dataset.maxIos,
        minVersion = parseVersionString(minString),
        maxVersion = maxString ? parseVersionString(maxString) : null,
        message = "supported",
        map = [];
    if (compareVersions(minVersion, osVersion) == -1) {
        message = "needs-upgrade";
        map = [minString];
    } else if (maxVersion != null && compareVersions(osVersion, maxVersion) == -1) {
        if ("unsupported" in prerequisite.dataset) {
            message = "unsupported";
            map = [minString, maxString];
        } else {
            message = "unconfirmed";
            map = [osString];
        }
    }
    var i = 0;
    prerequisite.querySelector("p").innerHTML = document.querySelector("#prerequisite-" + message).innerText.replace(/%s/g, function() {
        return map[i++];
    });
    prerequisite.classList.add("show");
}(document));